name: Docker

on:
  push:
    branches:
      - master

env:
  php-version: '8.0'
  node-version: 15

jobs:
  docker-run:
    runs-on: ubuntu-latest
    name: Docker build master

    strategy:
      fail-fast: false

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v3.5.0
        with:
          images: ghcr.io/monicahq/monica
          tag-sha: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}

    # Composer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer files
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ env.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ env.php-version }}-${{ hashFiles('**/composer.lock') }}
            ${{ runner.os }}-composer-${{ env.php-version }}
            ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

    # Yarn
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn files
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install yarn dependencies
        run: yarn inst
      - name: Build assets
        run: yarn run production

    # Complete setup
      - name: Version files
        run: |
          git describe --abbrev=0 --tags | sed 's/^v//' > config/.version
          git describe --abbrev=0 --tags --exact-match $GITHUB_SHA 2>/dev/null || git log --pretty="%h" -n1 $GITHUB_SHA > config/.release
          echo $GITHUB_SHA > config/.commit

    # Build docker
      - name: Docker build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          file: scripts/docker/Dockerfile
          context: .

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
