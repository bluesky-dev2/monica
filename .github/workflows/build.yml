name: Build

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]
    branches-ignore: ['l10n_master*']
  release:
    types: [created]

  workflow_run:
    workflows: ['Compress images']
    types: [completed]

jobs:
  #############
  # Build
  #############
  build:
    runs-on: ubuntu-latest
    name: Build (PHP ${{ matrix.php-version }})

    strategy:
      fail-fast: false
      matrix:
        php-version: [7.4]

    env:
      node-version: 14

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: imagick, mbstring, dom, fileinfo, ${{ matrix.connection }}
          coverage: none
      - name: Check PHP Version
        run: php -v
      - name: Check Composer Version
        run: composer -V
      - name: Check PHP Extensions
        run: php -m

    # Composer
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer files
        uses: actions/cache@v2.1.4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
            ${{ runner.os }}-composer-${{ matrix.php-version }}
            ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-req=php

    # Yarn
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn files
        uses: actions/cache@v2.1.4
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install yarn dependencies
        run: yarn inst
      - name: Lint files
        run: yarn run lint:all
      - name: Build assets
        run: yarn run production

      - name: Check if there is any file update needed
        run: |
          status=$(git status --porcelain)
          if [ -z "$status" ]; then
            echo "Nothing to push, already up to date."
          else
            echo -e "Waiting modifications:\n$status"
            exit -1
          fi
