{"version":3,"sources":["webpack:///./resources/assets/js/stripe.js"],"names":["card","stripe","elements","create","hidePostalCode","style","base","color","lineHeight","fontFamily","fontSmoothing","fontSize","::placeholder","invalid","iconColor","mount","addEventListener","event","displayError","document","getElementById","error","textContent","message","preventDefault","extraDetails","name","this","querySelector","value","address_zip","createToken","then","result","token","form","hiddenInput","createElement","setAttribute","id","appendChild","submit"],"mappings":"4EAAA,IAsBIA,EAtBWC,OAAOC,WAsBFC,OAAO,QACzBC,gBAAgB,EAChBC,OAnBAC,MACEC,MAAO,UACPC,WAAY,OACZC,WAAY,0CACZC,cAAe,cACfC,SAAU,OACVC,iBACEL,MAAO,YAGXM,SACEN,MAAO,UACPO,UAAW,cAWfd,EAAKe,MAAM,iBAGXf,EAAKgB,iBAAiB,SAAU,SAASC,GACvC,IAAIC,EAAeC,SAASC,eAAe,eACvCH,EAAMI,MACRH,EAAaI,YAAcL,EAAMI,MAAME,QAEvCL,EAAaI,YAAc,KAKpBH,SAASC,eAAe,gBAC9BJ,iBAAiB,SAAU,SAASC,GACvCA,EAAMO,iBAEN,IAAIC,GACFC,KAAMC,KAAKC,cAAc,+BAA+BC,MACxDC,YAAaH,KAAKC,cAAc,2BAA2BC,OAG7D5B,OAAO8B,YAAY/B,EAAMyB,GAAcO,KAAK,SAASC,GAGjD,IASsBC,EAEtBC,EACAC,EAdEH,EAAOZ,MAEUF,SAASC,eAAe,eAC9BE,YAAcW,EAAOZ,MAAME,SAQlBW,EALHD,EAAOC,MAO1BC,EAAOhB,SAASC,eAAe,iBAC/BgB,EAAcjB,SAASkB,cAAc,UAC7BC,aAAa,OAAQ,UACjCF,EAAYE,aAAa,OAAQ,eACjCF,EAAYE,aAAa,QAASJ,EAAMK,IACxCJ,EAAKK,YAAYJ,GAGjBD,EAAKM","file":"/js/stripe.js","sourcesContent":["var elements = stripe.elements();\n\n// Custom styling can be passed to options when creating an Element.\n// (Note that this demo uses a wider set of styles than the guide below.)\nvar style = {\n  base: {\n    color: '#32325d',\n    lineHeight: '18px',\n    fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n    fontSmoothing: 'antialiased',\n    fontSize: '16px',\n    '::placeholder': {\n      color: '#aab7c4'\n    }\n  },\n  invalid: {\n    color: '#fa755a',\n    iconColor: '#fa755a'\n  }\n};\n\n// Create an instance of the card Element\nvar card = elements.create('card', {\n  hidePostalCode: true,\n  style: style\n});\n\n// Add an instance of the card Element into the `card-element` <div>\ncard.mount('#card-element');\n\n// Handle real-time validation errors from the card Element.\ncard.addEventListener('change', function(event) {\n  var displayError = document.getElementById('card-errors');\n  if (event.error) {\n    displayError.textContent = event.error.message;\n  } else {\n    displayError.textContent = '';\n  }\n});\n\n// Handle form submission\nvar form = document.getElementById('payment-form');\nform.addEventListener('submit', function(event) {\n  event.preventDefault();\n\n  var extraDetails = {\n    name: this.querySelector('input[name=cardholder-name]').value,\n    address_zip: this.querySelector('input[name=address-zip]').value,\n  };\n\n  stripe.createToken(card, extraDetails).then(function(result) {\n    if (result.error) {\n      // Inform the user if there was an error\n      var errorElement = document.getElementById('card-errors');\n      errorElement.textContent = result.error.message;\n    } else {\n      // Send the token to your server\n      stripeTokenHandler(result.token);\n    }\n  });\n});\n\nfunction stripeTokenHandler(token) {\n  // Insert the token ID into the form so it gets submitted to the server\n  var form = document.getElementById('payment-form');\n  var hiddenInput = document.createElement('input');\n  hiddenInput.setAttribute('type', 'hidden');\n  hiddenInput.setAttribute('name', 'stripeToken');\n  hiddenInput.setAttribute('value', token.id);\n  form.appendChild(hiddenInput);\n\n  // Submit the form\n  form.submit();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/stripe.js"],"sourceRoot":""}