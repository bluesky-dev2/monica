sudo: required
language: php

services:
  - mysql
  - docker
  - postgresql

env:
  global:
    - SAUCELABS=1

matrix:
  include:
    - php: 7.1
      env:
        - DB=mysql
        - SELENIUM=1
        - COVERAGE=1
    - php: 7.0
      env:
        - DB=mysql
        - SELENIUM=1
    - php: 7.2
      env:
        - DB=mysql
        - SELENIUM=1
    - php: 7.1
      env: DB=postgres
  allow_failures:
    - env: DB=postgres
  fast_finish: true

# Run branches build on master and tagged version
branches:
  only:
  - master
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

addons:
  postgresql: "9.6"
  chrome: stable
  sauce_connect:
    username: "monicahq"
  jwt:
    secure: "Z6XcUlBrmiO085kmF/WBRA6dnhtIhdQG+olFHM5CmQXkIXKUTR7wwAMRg+ys5NtFKVspYPDPPtV9CdEl1zQ3Ii3aSWentsCwbXxGurPqvY+aQjP1U1CmURvPY55BGTMHabt5WcPnFVIJql3vCfD2BFWwIk/78cQ9QKuDJ7/2BxFzWE4AZG9wKYzbqYGbc4l4wdvEE0H0ClRzqGPDvyWpUw1RbZU0lVud0JVa9UXntmtsEFgKEZ7WTTSm2XgoFtVK9qVrXc8TEVve126FSoi5GIxQFdQ/ZWybq5AggVy/Dp5w+q9zCLu19J95itGKpj+GL+9YCJSo4lqHlyLtZ+Ddt41y2E6O4SXoHCjeiFK3wV00AKWIpLedHBovdT2fnQ4f62GrOFA6iw8hV0ftxiFgRwdxv/r+ee1PDy5tQeLl/A0UelIAGy0ZyCfYDgaoK3td45iXcnBUjnbveq8rFgUNkdCXwBCJF89veQS4F/QQFms1AWsodifmT6PgIaWgk6Nt0dPO5jAT6NZ2wlHlkXu80TZf6pJCVC+Pvmuwdlhs+clSizjVJOQ0wVBCETmz4VSKPXLTgdlySncfKrnO8VnfospfZ5KwMGm4JR0wtixH0qTPNDKRlv4X/OedTJFZeN9iqJmWJLTfYc7I16TFXhOpdhP5o+yQE+k7BFrTveGG5bw="

before_install:
  - mkdir -p $TRAVIS_BUILD_DIR/results/coverage
  - cp scripts/tests/.env.$DB.travis .env
  - if [[ "$DB" == "mysql" ]]; then mysql -v -e 'CREATE DATABASE monica;'; fi
  - if [[ "$DB" == "postgres" ]]; then psql -e -c 'CREATE DATABASE monica;' -U postgres; fi
  - composer self-update

install:
  # Get packages
  - travis_retry composer install --no-interaction --prefer-dist --no-suggest --ignore-platform-reqs

  # Build js and css assets
  - npm install
  - npm run production

before_script:
  - bash -c "if [[ \"$SELENIUM\" == \"1\" && \"$SAUCELABS\" != \"1\" ]]; then google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost; fi" &
  - php artisan migrate --env=testing --no-interaction -vvv
  - php artisan db:seed --env=testing --no-interaction -vvv
  
script:
  # Run unit tests
  - vendor/bin/phpunit -c phpunit${DB/mysql/}.xml

  # Start http server
  - bash -c "if [[ \"$SELENIUM\" == \"1\" ]]; then php -S localhost:8000 -t $TRAVIS_BUILD_DIR/public $TRAVIS_BUILD_DIR/scripts/tests/server-cc.php 2>/dev/null; fi" &
  - if [[ "$SELENIUM" == "1" ]]; then until $(nc -z localhost 8000); do sleep 1; echo Waiting for http server to start...; done; fi

  # Run browser tests
  - if [[ "$SELENIUM" == "1" ]]; then php artisan dusk; fi

after_script:
  - if [[ "$SELENIUM" == "1" ]]; then scripts/tests/travis-report.sh 2>/dev/null; fi
  - if [[ "$COVERAGE" == "1" ]]; then vendor/bin/phpcov merge --clover=$TRAVIS_BUILD_DIR/results/coverage2.xml $TRAVIS_BUILD_DIR/results/coverage/; fi
  - if [[ "$COVERAGE" == "1" ]]; then bash <(curl -s https://codecov.io/bash); fi
  - if [[ "$COVERAGE" == "1" ]]; then scripts/tests/travis-sonar.sh; fi

cache:
  directories:
    - $HOME/.composer/cache/files
    - node_modules
    - $HOME/.sonar/cache
    - $HOME/sonarscanner
    - $HOME/sonarlauncher

jobs:
  include:
    - stage: Tests
      php: 7.1
      env:
        - DB=mysql
        - SELENIUM=1
        - COVERAGE=1

    - stage: Tests
      php: 7.0
      env:
        - DB=mysql
        - SELENIUM=1

    - stage: Tests
      php: 7.2
      env:
        - DB=mysql
        - SELENIUM=1

    - stage: Tests
      allow_failure: true 
      php: 7.1
      env: DB=postgres

    - stage: Deploy
      if: tag IS present
      before_install:
        - cp .env.travis .env
        - composer self-update

      install:
        # Get packages without require-dev
        - travis_retry composer install --no-interaction --prefer-dist --no-suggest --ignore-platform-reqs --no-dev
        # Build js and css assets
        - npm install
        - npm run production

      before_script: skip

      script:
        - make dist

      after_script: skip

      before_deploy:
        - make .travis.deploy.json

      deploy:
        provider: bintray
        file: .travis.deploy.json
        user: asbin
        key: $BINTRAY_APIKEY

    - stage: Deploy
      if: tag IS present
      before_install:
        - cp .env.travis .env
        - docker-compose --version

      install: skip
      before_script: skip

      script:
        - make docker_build
        - echo $BINTRAY_APIKEY | docker login -u asbin --password-stdin monicahq-docker-docker.bintray.io
        - make docker_push_bintray

      after_script: skip
